!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Magnata=e():t.Magnata=e()}(this,(()=>(()=>{"use strict";var t={d:(e,a)=>{for(var s in a)t.o(a,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:a[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Action:()=>o,Agent:()=>u,Assistant:()=>p,City:()=>l,Collection:()=>a,Entity:()=>d,Fixer:()=>b,LoanShark:()=>y,Manager:()=>v,NPC:()=>g,Page:()=>h,Place:()=>m,PlayBoard:()=>n,Player:()=>f,Spy:()=>w,Storage:()=>s,TeamOwner:()=>A,TimeKeeper:()=>c,Util:()=>i,Wallet:()=>r});class a extends Array{constructor(t,e){super(),this.id=t,this.game=e,this.oMap={}}register(t){this.push(t),this.oMap[t.constructor.name.toLowerCase()]=t.constructor}setMap(t){this.oMap=t}getData(){this.map((t=>t.getData()))}setData(){this.map((t=>t.setData()))}}class s{constructor(t,e){return this.owner=e,this.binID=t,this.content=JSON.parse(localStorage.getItem(this.binID))||{},this.started=!!this.content,this}load(){return this.content=JSON.parse(localStorage.getItem(this.binID))||{},this}save(){localStorage.setItem(this.binID,JSON.stringify(this.content)),this.load()}get(t){try{JSON.parse(this.content[t])}catch(t){}const e=this.content[t];return"object"==typeof oContent?oContent:e}set(t,e){this.load(),this.content[t]=e,this.save()}encodeId(t){return btoa(t)}decodeId(t){return atob(t)}}class i{constructor(t){this.game=t}checkElementExists(t,e){const a=document.querySelector(t);a?e(a):setTimeout((()=>this.checkElementExists(t,e)),2e3)}searchPlace(t){for(const[e,a]of Object.entries(this.game.places))if(a.reference==t)return a;return!1}getRandomPlace(t){const e=[];for(const[a,s]of Object.entries(this.game.cities[t].places))e.push(s.reference);return e[Math.floor(Math.random()*e.length)]}loadAgentData(){const t=this.game.db.get("Agent");this.game.agent.setHealth(t.health),this.game.agent.receive(t.balance),this.game.agent.capacity=t.capacity}transfer(t,e,a){return!1!==t.pay(a)&&(e.receive(a),this.game.board.setStatus(),!0)}}class r{constructor(t){return this.balance=0,this.owner=t,this}pay(t){return this.balance-t>=0&&t>0&&(this.balance-=t,this.balance)}receive(t){return t>0&&(this.balance+=t),this.balance}checkBalance(){return this.balance}message(t,e){this.owner.message(t,e)}}class o{constructor(t,e){this.id=t,this.game=e}}class h{constructor(t,e){this.id=t,this.game=e}}class n{constructor(t,e){return this.id=t,this.game=e,this.db=this.game.db,this.util=this.game.util,this.el=$('<div id="'+t+'_board" class="gameBoard"/>'),$("#titlecard").append(this.el),this.commActions=".commActions",this.page=[],this.action=[],this.setup(),this}setup(){const t=$('<div class="firm">\n                                <div>Magnata: Carpe diem!</div>\n                            </div>\n                            <div class="status">\n                                <div><h3>Data</h3><span class="statusDate">ðŸ—²</span></div>\n                                <div><h3>Lugar</h3><span class="statusLocation">ðŸ—²</span></div>\n                                <div><h3>Dividas</h3><span class="statusDebt money">ðŸ—²</span></div>\n                                <div><h3>SaÃºde</h3><span class="statusHealth">ðŸ—²</span></div>\n                            </div>\n                            <div class="values">\n                                <div class="warehouse">\n                                    <div class="stockValue floatLeft">Contratos</div>\n                                </div>\n                                <div class="stock">\n                                    <div class="stockValue floatLeft">Jogadores <span class="stockCapacity">ðŸ—²</span></div>\n                                    <div class="stockValue floatRight">Promesas <span class="stockPromises">ðŸ—²</span></div>\n                                </div>\n                                <div class="balance">\n                                    <div class="stockValue floatLeft">Cash: <span class="balanceCash money">ðŸ—²</span></div>\n                                    <div class="stockValue floatRight">Banco: <span class="balanceBank money">ðŸ—²</span></div>\n                                </div>\n                            </div>\n                            <div class="comm">\n                                <div class="commMessage">...</div>\n                                <div class="commActions"></div>\n                                <div class="commSay"></div>\n                            </div>\n                            ');$(this.el).append(t)}moveTo(t,e){$(this.el).css("left",t).css("top",e)}resize(t,e){$(this.el).css("width",t).css("height",e)}addPage(t){return this.page[t]=new Page(t,this),this.page[t]}spent(t,e){$(this.el).append(`<div class="spent">${e}: ${t}</div>`)}createAction(t,e,a,s=0,i=0){const r=new Magnata.Place(t,!1,!1),o=this.game.agent;return $(r.el).click((()=>{o.spend(i),console.log(i,"fee"),a[e](this.commActions,s,i)})),$(this.commActions).append(r.el),r.el}createInput(t,e,a,s=0){const i=new Magnata.Place(t,!1,!1);return $(i.el).click((()=>a[e](this.commActions,s))),$(this.commActions).append(i.el),i.el}resetComm(){$(".commMessage").empty(),$(".commActions").empty(),$(".commSay").empty()}say(t,e){$(".commMessage").remove(),$(".comm").prepend(`<div class="commMessage">${t}: ${e}</div>`)}message(t){$(this.commActions).append(`<div class="commSay">${t}</div>`)}arrive(){this.game.currentPlace.city.id;const t=this.game.currentPlace;return this.say("Assistente","VocÃª estÃ¡ em "+t.id),this.game.entities.getData(),this.setStatus(),this.showOptions(),void 0!==this.game.currentPlace.fare&&this.game.agent.spend(this.game.currentPlace.fare,this.game.currentPlace.id),this.game.places}setStatus(){this.setCity(),this.setHealth(),this.setBalance(),this.setDebt(),this.updateDate(),this.game.entities.setData()}updateDate(){$(".statusDate").text(this.game.timer.getCurrentDate().format("DD/MM/YYYY")),this.game.entities.map((t=>void 0!==t.debt?t.recalculate():void 0))}setCity(){$(".statusLocation").text(this.game.currentPlace.city.id)}setDebt(){const t=this.game.entities.filter((t=>null!=t.debt));let e=0;t.forEach((t=>e+=t.debt)),$(".statusDebt").text(e.toLocaleString("pt-BR")),console.log("setDebt",e)}setHealth(){const t=this.game.agent.health;let e="Perfeita";t<20?e="CrÃ­tica":t>=20&&t<50?e="Ruim":t>=50&&t<85&&(e="Boa"),$(".statusHealth").text(e+": "+this.game.agent.health)}setBalance(){$(".balanceCash").text(this.game.agent.wallet.balance.toLocaleString("pt-BR")),$(".balanceBank").text((0).toLocaleString("pt-BR"))}findContacts(t){for(const[e,a]of Object.entries(t.contacts))this.createAction(`Falar com ${e}`,a.action.name,a)}showOptions(){this.game.currentPlace.city.id,this.game.currentPlace,this.resetComm(),this.say("Assistente","O que vai fazer agora?"),this.createAction("<","showPlaces",this),this.findContacts(this.game.currentPlace),this.game.currentPlace.airport&&this.createAction("Viajar","showCities",this)}showPlaces(t){this.resetComm(),this.say("Motorista","Qual o seu destino?");const e=this.game.currentPlace.city.id,a=this.game.currentPlace.id;this.createAction("<","showOptions",this),$(t).prepend('<div style="float:left"></div>');for(const[s,i]of Object.entries(this.game.cities[e].places))i.id!=a&&$(t).append(i.getButton());return $(t)}showCities(t){this.resetComm(),this.say("Assistente","Onde vocÃª quer viajar?");const e=this.game.currentPlace.city.id;$(t).html(""),$(t).prepend('<div style="float:left"></div>'),this.createAction("<","showOptions",this);for(const[a,s]of Object.entries(this.game.cities))e!=s.id&&"function"==typeof s.getButton&&$(t).append(s.getButton());return this.game.cities}die(){this.game.currentPlace.city.id,this.game.currentPlace,this.resetComm(),$(this.commActions).append('<div style="width:100%;height:70%;text-align:center;font-size:2rem;color:#fff;margin-top:8px">VocÃª morreu!</div>')}}class c{constructor(t,e,a){return this.id=t,this.startDate=new Date(2015,1,28),this.currentDate=new Date(2015,1,28),this.game=e,this.counters=new Magnata.Collection("timers",this),this.callback=a,this}trip(t){this.currentDate=dayjs(this.currentDate).add(t,"hours").toDate(),this.updateCounters(t/24),this.saveState(),this.callback()}addCounter(t){this.counters[t]||(this.counters[t]=0)}updateCounters(t){for(let e in this.counters)this.counters[e]+=t}getCurrentDate(){return dayjs(this.currentDate)}getCounterValue(t){return this.counters[t]||0}saveState(){this.game.db.set(this.id,{startDate:this.startDate,currentDate:this.currentDate})}loadState(){const t=this.game.db.get(this.id)||!1;if(t&&t.currentDate)for(let e in t)this[e]=t[e];this.callback()}}class l{constructor(t,e,a){return this.id=t,this.location=e,this.game=a,this.places=[],this.airport="",this.movementFee=900,this.getButton(),this.airlines=["Latam","Gol","Azul","Avianca"],this}getButton(){return this.el=$('<div id="'+this.id+'Button" style="color: #0f0; z-index: 999; cursor: pointer; padding: 0px 3px ;margin: 3px;float: left; border: 1px solid #0f0; font-size: 0.9rem "> '+this.id+" </div>"),$(this.el).click((()=>this.landHere())),this.el}addAirport(t,e,a){return this.movementMessage=this.airlines[Math.floor(Math.random()*this.airlines.length)],this.airport=new Magnata.Place(t,e,a,this).attr("airport",!0),this.reference=e,this.places[t]=this.airport,this}addPlace(t,e,a,s){return this.places[t]=new Magnata.Place(t,e,s,this),this.places[t].fare=a,this}landHere(){this.airport.el.click()}}class m{constructor(t,e,a,s){return this.id=t,this.location=a,this.city=s,this.reference=e,this.contacts=[],this.movementFee=40,this.movementMessage="Uber",this.getButton(),this.attachToGame(),this}getHere(){const t=void 0!==this.city&&!0===this.city.game.currentPlace.airport&&!0===this.airport;this.location&&(this.reference&&this.city.game.agent.spend(t?this.city.movementFee:this.movementFee,t?this.city.movementMessage:this.movementMessage),this.city.game.board.setStatus(),t?this.city.game.timer.trip(24):this.city.game.timer.trip(6),window.location.href=this.location)}getButton(){return this.el=$('<div id="'+this.id+'Button" class="actionButton" style="color: #0f0; z-index: 999; cursor: pointer; padding: 0px 3px ;margin: 3px;float: left; border: 1px solid #0f0; font-size: 0.9rem "> '+this.id+" </div>"),$(this.el).click((()=>this.getHere())),this.el}attr(t,e){return this[t]=e,this}attachToGame(){this.reference&&this.location&&this.city.game.addPlace(this.reference,this)}addContact(t){this.contacts[t.name]=t}removeContact(t){this.contacts.splice(t.name,1)}}class d{constructor(t,e,a){this.id=t,this.name=t,this.place=e,this.game=a,this.wallet=new Magnata.Wallet(this),this.register()}register(){this.game.entities.register(this)}log(t){console.log(`${this.name}: ${t}`)}setData(){console.log(`${this.name}: setdData rror!`)}saveState(t){this.game.db.set(this.id,t)}getData(){console.log(`${this.name}: getData error!`)}loadState(){return this.game.db.get(this.id)||!1}receive(t){const e=this.wallet.receive(t);return this.log(`Received ${!1!==e?t:"nothing"}!`),this}pay(t){const e=this.wallet.pay(t);return this.log(`Paid ${!1!==e?t:"nothing"}!`),e}}class g extends d{constructor(t,e,a){return super(t,e,a),this}setAction(t){return this.action=this[t],this}async getChat(t){const e=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer API_KEY"},body:JSON.stringify({model:"gpt-4",messages:[{role:"user",content:t}]})});return(await e.json()).choices[0].message.content}async interact(t){const e=`\n        You are ${this.name}, an NPC located in ${this.place}.\n        The agent says: "${t}".\n        Respond in a way that reflects your character's personality and role.\n        `,a=await this.getChat(e);return`${this.name} says: "${a}"`}goTo(t){return this.game.moveNPC(this,t),`${this.name} foi para ${t}.`}recalculate(t){return t}}class u extends d{constructor(t,e,a){super("Agent","",a),this.capacity=t,this.usedCapacity=0,this.storage={},this.health=100,this.location=e,this.dead=!1,this.contacts=[]}setData(){this.saveState({health:this.health,capacity:this.capacity,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.health=t.health||0,this.capacity=t.capacity||10,this.wallet.receive(t.balance||0))}increaseCapacity(t){return t>0&&!this.dead&&(this.capacity+=t),this.capacity}setHealth(t){this.health=t}heal(t){const e=this.health+t;return e<=100&&t>0&&!this.dead?this.health+=t:e>100&&(this.health=100),this.health}damage(t){const e=this.health-t;return e>0&&t>0&&!this.dead?this.health-=t:e<0&&(this.health=0,this.die()),this.health}updateStatus(){this.game.board.setStatus()}die(){return this.dead=!0,this.health=0,this.game.dead(),!0}goBroke(){return this.dead=!0,this.health=0,this.game.broke(),!0}buy(t,e,a){const s=this.capacity-this.usedCapacity;if(s>e&&e>0&&this.pay(e*a)){this.usedCapacity+=e;const s=this.storage[t].price*this.storage[t].quantity+a*e;return this.storage[t].quantity+=e,this.storage[t].price=s,!0}return this.error=s<e?"We don't have room for that!":e<0?"Amount is negative!":"Not enough money for that purchase!",!1}sell(t,e,a){const s=this.storage[t].quantity-e;return e>0&&a>0&&s>=0?(this.usedCapacity-=e,this.receive(e*a),!0):(e<=0?this.error="The quantity has to be more than zero!":a<=0?this.error="The price has to be more than zero!":s&&(this.error="We don't have that quantity of "+t+"!"),!1)}message(t,e){this.game.message(t,e)}spend(t,e=" em Uber!"){const a=1+(40-Math.floor(80*Math.random()))/100,s=Math.floor(t*a);t>0&&(this.pay(Math.floor(s)),this.game.board.spent(`<span class="money">${s}</span>`,e))}}class p extends g{constructor(t,e,a){return super(t,e,a),this}setData(){this.saveState({balance:this.wallet.balance})}getData(){const t=this.loadState();t&&this.wallet.receive(t.balance||0)}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Diga chefe, como te ajudo?"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Quem ligou?","showOptions",this),this.game.board.createAction("Traz cafÃ©","showOptions",this),this.game.board.createAction("Faz um pix","fazerPix",this)}fazerPix(){this.game.board.resetComm(),this.game.board.say(`${this.name}`,"De quanto vocÃª precisa?"),this.game.board.createAction("<","chat",this),this.game.board.createAction("5000","pix5k",this),this.game.board.createAction("10000","pix10k",this),this.pix5k=function(){this.game.util.transfer(this,this.game.agent,5e3),this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Pronto, jÃ¡ fiz e agora?"),this.game.board.createAction("<","chat",this),this.game.board.createAction("Continuar","chat",this),this.game.board.createAction("Sair","showOptions",this.game.board)},this.pix10k=function(){this.game.agent.receive(1e4),this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Prontinho chefe!"),this.game.board.createAction("<","chat",this),this.game.board.createAction("Continuar","chat",this),this.game.board.createAction("Sair","showOptions",this.game.board)}}}class b extends g{constructor(t,e,a,s,i,r){return super(t,e,a),this.speed=s,this.strength=i,this.loyalty=r,this.boss={},this}setData(){this.saveState({speed:this.speed,strength:this.strength,loyalty:this.loyalty,boss:this.boss,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.speed=t.speed||10,this.strength=t.strength||10,this.loyalty=t.loyalty||0,this.boss=t.boss||0,this.wallet.receive(t.balance||0))}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Cara, tu deve grana e vai pagar de qualquer jeito."),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Correr","die",this.game.board),this.game.board.createAction("Pagar","pay",this)}}class y extends g{constructor(t,e,a,s,i,r,o){return super(t,e,a),this.creditLimit=i||1e3,this.creditScore=r||1,this.debt=o||0,this.interest=s||.1,this.lastRecalc="",this}setData(){this.saveState({creditLimit:this.creditLimit,creditScore:this.creditScore,debt:this.debt,interest:this.interest,balance:this.wallet.balance,lastRecalc:""==this.lastRecalc?this.game.timer.getCurrentDate():this.lastRecalc})}getData(){const t=this.loadState();t&&(this.creditLimit=t.creditLimit||0,this.creditScore=t.creditScore||1,this.debt=t.debt||0,this.interest=t.interest||0,this.wallet.receive(t.balance||0),this.lastRecalc=t.lastRecalc)}setLimit(t){return t>0&&(this.creditLimit=t,this.log(`Seu limite agora Ã© ${t}`)),this}recalculate(){if(0==this.debt)return;const t=dayjs(this.game.timer.getCurrentDate()),e=dayjs(""==this.lastRecalc?t:this.lastRecalc),a=t.diff(e,"days");a>0&&(this.debt+=Math.floor(this.interest/30*a*this.debt),this.lastRecalc=t)}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,`Me conta, o que vocÃª quer? Vai pagar meus ${this.debt}?`),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Preciso de grana","borrow",this),this.debt>0?(this.game.board.createAction("NÃ£o, deixa assim","showOptions",this.game.board),this.game.board.createAction("Quero pagar","repay",this,0)):this.game.board.createAction("SÃ³ passei para dar oi","showOptions",this.game.board)}repay(){this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Quanto vocÃª vai pagar?"),this.game.board.createAction("<","chat",this),this.debt>=5e3&&this.game.board.createAction("5000","processPayment",this,5e3),this.debt>=1e4&&this.game.board.createAction("10000","processPayment",this,1e4)}borrow(){this.game.board.resetComm(),this.game.board.say(`${this.name}`,`De quanto vocÃª precisa? VocÃª jÃ¡ me deve ${this.debt}`),this.game.board.createAction("<","chat",this),this.game.board.createAction("5000","processCredit",this,5e3),this.game.board.createAction("10000","processCredit",this,1e4)}processPayment(t,e){this.game.util.transfer(this.game.agent,this,e)?(this.debt-=e,this.creditScore=1.05*this.creditScore,this.creditLimit+=.5*e,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Ã“timo, que bom que posso confiar em vocÃª!"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.message(`Obrigado! Agora confio mais em vocÃª (${this.creditScore.toFixed(2)})`),this.game.board.setStatus()):(this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Ha! nÃ£o tem grana, como vai pagar?"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Sair correndo","showPlaces",this.game.board),this.game.board.setStatus())}processCredit(t,e){this.game.util.transfer(this,this.game.agent,e)?(this.debt+=e,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Ponto, jÃ¡ passei para a sua conta."),this.game.board.createAction("<","chat",this),this.game.board.createAction("Continuar","chat",this),this.game.board.createAction("Sair","showOptions",this.game.board),this.game.board.message("Tem 15% de juros ao mÃªs. Precisa pagar em 30 dias!")):(this.game.board.resetComm(),this.game.board.say(`${this.name}`,"NÃ£o vai dar, nÃ£o tenho esse dinheiro agora..."),this.game.board.createAction("<","chat",this),this.game.board.createAction("Continuar","chat",this),this.game.board.createAction("Sair","showPlaces",this.game.board))}}class v extends g{constructor(t,e,a,s){return super(t,e,a),this.reputation=s,this}setData(){this.saveState({reputation:this.reputation,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.reputation=t.reputation||0,this.wallet.receive(t.balance||0))}sabotage(t){return`${this.name} tries to sabotage your deal with ${t}.`}negotiateDeal(t,e){return this.reputation>7?`${this.name} outbids you and secures the deal for ${t}.`:`${this.name} fails to secure the deal due to low reputation.`}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Tem algum jogador que preste?"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Mostrar jogadores","showOptions",this),this.game.board.createAction("Perguntar por trocas","showOptions",this)}}class f extends g{constructor(t,e,a,s,i,r){return super(t,e,a),this.skillLevel=s,this.marketValue=i,this.loyalty=r,this}setData(){this.saveState({skillLevel:this.skillLevel,marketValue:this.marketValue,loyalty:this.loyalty,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.skillLevel=t.skillLevel||0,this.marketValue=t.marketValue||0,this.loyalty=t.loyalty||0,this.wallet.receive(t.balance||0))}negotiate(t){return t>=this.marketValue?`${this.name} agrees to the deal.`:`${this.name} refuses the offer. "Iâ€™m worth more than that!"`}train(){return this.skillLevel+=1,`${this.name} trains hard and improves their skill to ${this.skillLevel}.`}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Fala Magnata, tem algo pra mim?"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Propor um time","showOptions",this),this.game.board.createAction("Pedir tempo","showOptions",this),this.game.board.createAction("Pedir fofocas","showOptions",this)}}class w extends g{constructor(t,e,a,s,i){return super(t,e,a),this.retainer=s,this.dailyFee=i,this}setData(){this.saveState({retainer:this.retainer,dailyFee:this.dailyFee,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.retainer=t.retainer||0,this.dailyFee=t.dailyFee||0,this.wallet.receive(t.balance||0))}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Tenho muito pra te contar."),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Quero informaÃ§Ã£o","showOptions",this),this.game.board.createAction("Contar rumores","showOptions",this)}}class A extends g{constructor(t,e,a,s){return super(t,e,a),this.teamName=s,this}setData(){this.saveState({teamName:this.teamName,balance:this.wallet.balance})}getData(){const t=this.loadState();t&&(this.skillLevel=t.skillLevel||0,this.marketValue=t.marketValue||0,this.loyalty=t.loyalty||0,this.wallet.receive(t.balance||0))}negotiateTransfer(t,e){return e>5e5?(this.wealth+=e,`${this.name}, owner of ${this.teamName}, accepts the transfer deal for ${t}.`):`${this.name} rejects the offer. "Thatâ€™s not enough for ${t}!"`}invest(t){return t>this.wealth?`${this.name} cannot invest ${t}. Insufficient funds.`:(this.wealth-=t,`${this.name} invests ${t} in ${this.teamName}.`)}chat(){this.game.currentPlace.city.id,this.game.currentPlace,this.game.board.resetComm(),this.game.board.say(`${this.name}`,"Precisamos de um goleiro!"),this.game.board.createAction("<","showOptions",this.game.board),this.game.board.createAction("Mostrar jogadores","showOptions",this),this.game.board.createAction("Prometer para depois","showOptions",this)}}return e})()));